<?xml version="1.0"?>
<!DOCTYPE modification SYSTEM "http://www.elkarte.net/site/modification">
<modification xmlns="http://www.elkarte.net/site/modification" xmlns:elk="http://www.elkarte.net/">
	<id>Elkarte Contributors:ElkArte_106_patch</id>
	<name>ElkArte 1.0.7 patch</name>
	<version>1.0.0</version>
	<file name="BOARDDIR/SSI.php">
		<operation>
			<search position="replace"><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:		BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0.6
 *
 */
]]></search>
			<add><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:		BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0.7
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[define('ELK', 'SSI');

// Shortcut for the browser cache stale
define('CACHE_STALE', '?106');

// We're going to want a few globals... these are all set later.
global $time_start, $maintenance, $msubject, $mmessage, $mbname, $language;]]></search>
			<add><![CDATA[define('ELK', 'SSI');

// Shortcut for the browser cache stale
define('CACHE_STALE', '?107');

// We're going to want a few globals... these are all set later.
global $time_start, $maintenance, $msubject, $mmessage, $mbname, $language;]]></add>
		</operation>
	</file>
	<file name="BOARDDIR/index.php">
		<operation>
			<search position="replace"><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:		BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0.6
 *
 */

$forum_version = 'ElkArte 1.0.6';
define('FORUM_VERSION', $forum_version);

// First things first, but not necessarily in that order.
define('ELK', 1);

// Shortcut for the browser cache stale
define('CACHE_STALE', '?106');

if (function_exists('set_magic_quotes_runtime'))
	@set_magic_quotes_runtime(0);]]></search>
			<add><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:		BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0.7
 *
 */

$forum_version = 'ElkArte 1.0.7';
define('FORUM_VERSION', $forum_version);

// First things first, but not necessarily in that order.
define('ELK', 1);

// Shortcut for the browser cache stale
define('CACHE_STALE', '?107');

if (function_exists('set_magic_quotes_runtime'))
	@set_magic_quotes_runtime(0);]]></add>
		</operation>
	</file>
	<file name="SOURCEDIR/Load.php">
		<operation>
			<search position="replace"><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:		BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0.5
 *
 */
]]></search>
			<add><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:		BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0.7
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[	// Is post moderation alive and well?
	$modSettings['postmod_active'] = isset($modSettings['admin_features']) ? in_array('pm', explode(',', $modSettings['admin_features'])) : true;

	// Here to justify the name of this function. :P
	// It should be added to the install and upgrade scripts.
	// But since the convertors need to be updated also. This is easier.]]></search>
			<add><![CDATA[	// Is post moderation alive and well?
	$modSettings['postmod_active'] = isset($modSettings['admin_features']) ? in_array('pm', explode(',', $modSettings['admin_features'])) : true;

	// @deprecated since 1.0.6 compatibility setting for migration
	if (!isset($modSettings['avatar_max_height']))
		$modSettings['avatar_max_height'] = $modSettings['avatar_max_height_external'];
	if (!isset($modSettings['avatar_max_width']))
		$modSettings['avatar_max_width'] = $modSettings['avatar_max_width_external'];

	// Here to justify the name of this function. :P
	// It should be added to the install and upgrade scripts.
	// But since the convertors need to be updated also. This is easier.]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[
	// Assume they are not a moderator.
	$user_info['is_mod'] = false;
	$context['user']['is_mod'] = &$user_info['is_mod'];
	// @since 1.0.5 - is_mod takes into account only local (board) moderators,
	// and not global moderators, is_moderator is meant to take into account both.
	$user_info['is_moderator'] = false;
	$context['user']['is_moderator'] = &$user_info['is_moderator'];

	// Start the linktree off empty..
	$context['linktree'] = array();]]></search>
			<add><![CDATA[
	// Assume they are not a moderator.
	$user_info['is_mod'] = false;
	// @since 1.0.5 - is_mod takes into account only local (board) moderators,
	// and not global moderators, is_moderator is meant to take into account both.
	$user_info['is_moderator'] = false;

	// Start the linktree off empty..
	$context['linktree'] = array();]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[	{
		// Now check if the user is a moderator.
		$user_info['is_mod'] = isset($board_info['moderators'][$user_info['id']]);
		$user_info['is_moderator'] = $user_info['is_mod'] || allowedTo('moderate_board');

		if (count(array_intersect($user_info['groups'], $board_info['groups'])) == 0 && !$user_info['is_admin'])
			$board_info['error'] = 'access';]]></search>
			<add><![CDATA[	{
		// Now check if the user is a moderator.
		$user_info['is_mod'] = isset($board_info['moderators'][$user_info['id']]);

		if (count(array_intersect($user_info['groups'], $board_info['groups'])) == 0 && !$user_info['is_admin'])
			$board_info['error'] = 'access';]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[	// Load the mod cache so we can know what additional boards they should see, but no sense in doing it for guests
	if (!$user_info['is_guest'])
	{
		if (!isset($_SESSION['mc']) || $_SESSION['mc']['time'] <= $modSettings['settings_updated'])
		{
			require_once(SUBSDIR . '/Auth.subs.php');]]></search>
			<add><![CDATA[	// Load the mod cache so we can know what additional boards they should see, but no sense in doing it for guests
	if (!$user_info['is_guest'])
	{
		$user_info['is_moderator'] = $user_info['is_mod'] || allowedTo('moderate_board');
		if (!isset($_SESSION['mc']) || $_SESSION['mc']['time'] <= $modSettings['settings_updated'])
		{
			require_once(SUBSDIR . '/Auth.subs.php');]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[			'atom' => $scripturl . '?action=.xml;type=atom;limit=' . (!empty($modSettings['xmlnews_limit']) ? $modSettings['xmlnews_limit'] : 5)
		);

	// Default JS variables for use in every theme
	addJavascriptVar(array(
		'elk_theme_url' => JavaScriptEscape($settings['theme_url']),]]></search>
			<add><![CDATA[			'atom' => $scripturl . '?action=.xml;type=atom;limit=' . (!empty($modSettings['xmlnews_limit']) ? $modSettings['xmlnews_limit'] : 5)
		);

	// Since it's nice to have avatars all of the same size, and in some cases the size detection may fail,
	// let's add the css in any case
	if (!empty($modSettings['avatar_max_width']) || !empty($modSettings['avatar_max_height']))
	{
		$context['html_headers'] .= '
		<style>
			.avatarresize {' . (!empty($modSettings['avatar_max_width']) ? '
				max-width:' . $modSettings['avatar_max_width'] . 'px;' : '') . (!empty($modSettings['avatar_max_height']) ? '
				max-height:' . $modSettings['avatar_max_height'] . 'px;' : '') . '
			}
		</style>';
	}

	// Default JS variables for use in every theme
	addJavascriptVar(array(
		'elk_theme_url' => JavaScriptEscape($settings['theme_url']),]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[function determineAvatar($profile)
{
	global $modSettings, $scripturl, $settings, $context;
	static $added_once = false;

	if (empty($profile))
		return array();

	// @todo compatibility setting for migration
	if (!isset($modSettings['avatar_max_height']))
		$modSettings['avatar_max_height'] = $modSettings['avatar_max_height_external'];
	if (!isset($modSettings['avatar_max_width']))
		$modSettings['avatar_max_width'] = $modSettings['avatar_max_width_external'];

	// Since it's nice to have avatars all of the same size, and in some cases the size detection may fail,
	// let's add the css in any case
	if (!$added_once)
	{
		if (!isset($context['html_headers']))
			$context['html_headers'] = '';

		if (!empty($modSettings['avatar_max_width']) || !empty($modSettings['avatar_max_height']))
		{
			$context['html_headers'] .= '
	<style>
		.avatarresize {' . (!empty($modSettings['avatar_max_width']) ? '
			max-width:' . $modSettings['avatar_max_width'] . 'px;' : '') . (!empty($modSettings['avatar_max_height']) ? '
			max-height:' . $modSettings['avatar_max_height'] . 'px;' : '') . '
		}
	</style>';
		}
		$added_once = true;
	}

	$avatar_protocol = substr(strtolower($profile['avatar']), 0, 7);

	// uploaded avatar?]]></search>
			<add><![CDATA[function determineAvatar($profile)
{
	global $modSettings, $scripturl, $settings, $context;

	if (empty($profile))
		return array();

	$avatar_protocol = substr(strtolower($profile['avatar']), 0, 7);

	// uploaded avatar?]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[	elseif (!empty($profile['avatar']) && $profile['avatar'] === 'gravatar')
	{
		// Gravatars URL.
		$gravatar_url = '//www.gravatar.com/avatar/' . md5(strtolower($profile['email_address'])) . ';s=' . $modSettings['avatar_max_height'] . (!empty($modSettings['gravatar_rating']) ? ('&amp;r=' . $modSettings['gravatar_rating']) : '');

		$avatar = array(
			'name' => $profile['avatar'],]]></search>
			<add><![CDATA[	elseif (!empty($profile['avatar']) && $profile['avatar'] === 'gravatar')
	{
		// Gravatars URL.
		$gravatar_url = '//www.gravatar.com/avatar/' . md5(strtolower($profile['email_address'])) . '?s=' . $modSettings['avatar_max_height'] . (!empty($modSettings['gravatar_rating']) ? ('&amp;r=' . $modSettings['gravatar_rating']) : '');

		$avatar = array(
			'name' => $profile['avatar'],]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[	elseif (!empty($modSettings['avatar_default']) && empty($profile['avatar']) && empty($profile['filename']))
	{
		// $settings not initialized? We can't do anything further..
		if (empty($settings))
			return array();

		// Let's proceed with the default avatar.
		$avatar = array(
			'name' => '',
			'image' => '<img class="avatar avatarresize" src="' . $settings['images_url'] . '/default_avatar.png" alt="" />',
			'href' => $settings['images_url'] . '/default_avatar.png',
			'url' => 'http://',
		);
	}
	// finally ...
	else]]></search>
			<add><![CDATA[	elseif (!empty($modSettings['avatar_default']) && empty($profile['avatar']) && empty($profile['filename']))
	{
		// $settings not initialized? We can't do anything further..
		if (!empty($settings))
		{
			// Let's proceed with the default avatar.
			$avatar = array(
				'name' => '',
				'image' => '<img class="avatar avatarresize" src="' . $settings['images_url'] . '/default_avatar.png" alt="" />',
				'href' => $settings['images_url'] . '/default_avatar.png',
				'url' => 'http://',
			);
		}
		else
		{
			$avatar = array();
		}
	}
	// finally ...
	else]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[		);

	// Make sure there's a preview for gravatars available.
	$avatar['gravatar_preview'] = '//www.gravatar.com/avatar/' . md5(strtolower($profile['email_address'])) . ';s=' . $modSettings['avatar_max_height'] . (!empty($modSettings['gravatar_rating']) ? ('&amp;r=' . $modSettings['gravatar_rating']) : '');

	call_integration_hook('integrate_avatar', array(&$avatar));

	return $avatar;
}]]></search>
			<add><![CDATA[		);

	// Make sure there's a preview for gravatars available.
	$avatar['gravatar_preview'] = '//www.gravatar.com/avatar/' . md5(strtolower($profile['email_address'])) . '?s=' . $modSettings['avatar_max_height'] . (!empty($modSettings['gravatar_rating']) ? ('&amp;r=' . $modSettings['gravatar_rating']) : '');

	call_integration_hook('integrate_avatar', array(&$avatar, $profile));

	return $avatar;
}]]></add>
		</operation>
	</file>
	<file name="SOURCEDIR/Security.php">
		<operation>
			<search position="replace"><![CDATA[
	// Better be sure to remember the real referer
	if (empty($_SESSION['request_referer']))
		$_SESSION['request_referer'] = isset($_SERVER['HTTP_REFERER']) ? @parse_url($_SERVER['HTTP_REFERER']) : array();
	elseif (empty($_POST))
		unset($_SESSION['request_referer']);
]]></search>
			<add><![CDATA[
	// Better be sure to remember the real referer
	if (empty($_SESSION['request_referer']))
		$_SESSION['request_referer'] = isset($_SERVER['HTTP_REFERER']) ? $_SERVER['HTTP_REFERER'] : '';
	elseif (empty($_POST))
		unset($_SESSION['request_referer']);
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[
	// Check the referring site - it should be the same server at least!
	if (isset($_SESSION['request_referer']))
		$referrer = $_SESSION['request_referer'];
	else
		$referrer = isset($_SERVER['HTTP_REFERER']) ? @parse_url($_SERVER['HTTP_REFERER']) : array();

	if (!empty($referrer['host']))
	{]]></search>
			<add><![CDATA[
	// Check the referring site - it should be the same server at least!
	if (isset($_SESSION['request_referer']))
		$referrer_url = $_SESSION['request_referer'];
	else
		$referrer_url = isset($_SERVER['HTTP_REFERER']) ? $_SERVER['HTTP_REFERER'] : '';

	$referrer = @parse_url($referrer_url);

	if (!empty($referrer['host']))
	{]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[		{
			$error = 'verify_url_fail';
			$log_error = true;
		}
	}
]]></search>
			<add><![CDATA[		{
			$error = 'verify_url_fail';
			$log_error = true;
			$sprintf = array(Util::htmlspecialchars($referrer_url));
		}
	}
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[	{
		$error = 'verify_url_fail';
		$log_error = true;
	}

	// Everything is ok, return an empty string.]]></search>
			<add><![CDATA[	{
		$error = 'verify_url_fail';
		$log_error = true;
		$sprintf = array(Util::htmlspecialchars($referrer_url));
	}

	// Everything is ok, return an empty string.]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[			die;
		}
		else
			fatal_lang_error($error, isset($log_error) ? 'user' : false);
	}
	// A session error occurred, return the error to the calling function.
	else]]></search>
			<add><![CDATA[			die;
		}
		else
			fatal_lang_error($error, isset($log_error) ? 'user' : false, isset($sprintf) ? $sprintf : array());
	}
	// A session error occurred, return the error to the calling function.
	else]]></add>
		</operation>
	</file>
	<file name="SOURCEDIR/Subs.php">
		<operation>
			<search position="replace"><![CDATA[		';xml',
		';api',
	);
	$make_old = true;
	foreach ($invalid_old_url as $url)
	{]]></search>
			<add><![CDATA[		';xml',
		';api',
	);
	call_integration_hook('integrate_invalid_old_url', array(&$invalid_old_url));
	$make_old = true;
	foreach ($invalid_old_url as $url)
	{]]></add>
		</operation>
	</file>
	<file name="ADMINDIR/ManagePermissions.controller.php">
		<operation>
			<search position="replace"><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:		BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0.1
 *
 */
]]></search>
			<add><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:		BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0.7
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[				'name' => array(
					'header' => array(
						'value' => $txt['membergroups_name'],
						'class' => 'grid50',
					),
					'data' => array(
						'function' => create_function('$rowData', ']]></search>
			<add><![CDATA[				'name' => array(
					'header' => array(
						'value' => $txt['membergroups_name'],
					),
					'data' => array(
						'function' => create_function('$rowData', ']]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[				'members' => array(
					'header' => array(
						'value' => $txt['membergroups_members_top'],
						'class' => 'grid10',
					),
					'data' => array(
						'function' => create_function('$rowData', ']]></search>
			<add><![CDATA[				'members' => array(
					'header' => array(
						'value' => $txt['membergroups_members_top'],
						'class' => 'grid17',
					),
					'data' => array(
						'function' => create_function('$rowData', ']]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[				'permissions_allowed' => array(
					'header' => array(
						'value' => empty($modSettings['permission_enable_deny']) ? $txt['membergroups_permissions'] : $txt['permissions_allowed'],
						'class' => 'grid8',
					),
					'data' => array(
						'function' => create_function('$rowData', ']]></search>
			<add><![CDATA[				'permissions_allowed' => array(
					'header' => array(
						'value' => empty($modSettings['permission_enable_deny']) ? $txt['membergroups_permissions'] : $txt['permissions_allowed'],
						'class' => 'grid17',
					),
					'data' => array(
						'function' => create_function('$rowData', ']]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[					'evaluate' => !empty($modSettings['permission_enable_deny']),
					'header' => array(
						'value' => $txt['permissions_denied'],
						'class' => 'grid8',
					),
					'data' => array(
						'function' => create_function('$rowData', ']]></search>
			<add><![CDATA[					'evaluate' => !empty($modSettings['permission_enable_deny']),
					'header' => array(
						'value' => $txt['permissions_denied'],
						'class' => 'grid17',
					),
					'data' => array(
						'function' => create_function('$rowData', ']]></add>
		</operation>
	</file>
	<file name="ADMINDIR/PackageServers.controller.php">
		<operation>
			<search position="replace"><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:		BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0.4
 *
 */
]]></search>
			<add><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:		BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0.7
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[				{
					// Read in the package info from the fetched data
					$package = $this->_load_package_json($thisPackage, $packageSection);

					// Check the install status
					$package['can_install'] = false;
					$is_installed = array_intersect(array_keys($installed_adds), $package['id']);
					$package['is_installed'] = !empty($is_installed);

					// Set the ID from our potential list should the ID not be provided in the package .yaml
					$package['id'] = $package['is_installed'] ? array_shift($is_installed) : $package['id'][0];

					// Version installed vs version available
					$package['is_current'] = !empty($package['is_installed']) && ($installed_adds[$package['id']] == $package['version']);
					$package['is_newer'] = !empty($package['is_installed']) && ($installed_adds[$package['id']] > $package['version']);

					// Set the package filename for downloading and pre-existence checking
					$base_name = $this->_rename_master($package['server']['download']);]]></search>
			<add><![CDATA[				{
					// Read in the package info from the fetched data
					$package = $this->_load_package_json($thisPackage, $packageSection);
					$package['possible_ids'] = $package['id'];

					// Check the install status
					$package['can_install'] = false;
					$is_installed = array_intersect(array_keys($installed_adds), $package['possible_ids']);
					$package['is_installed'] = !empty($is_installed);

					// Set the ID from our potential list should the ID not be provided in the package .yaml
					$package['id'] = $package['is_installed'] ? array_shift($is_installed) : $package['id'][0];

					// Version installed vs version available
					$package['is_current'] = !empty($package['is_installed']) && compareVersions($installed_adds[$package['id']], $package['version']) == 0;
					$package['is_newer'] = !empty($package['is_installed']) && compareVersions($package['version'], $installed_adds[$package['id']]) > 0;

					// Set the package filename for downloading and pre-existence checking
					$base_name = $this->_rename_master($package['server']['download']);]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[
					// See if this filename already exists on the server
					$already_exists = getPackageInfo($base_name);
					$package['download_conflict'] = is_array($already_exists) && $already_exists['id'] == $package['id'] && $already_exists['version'] != $package['version'];
					$package['count'] = ++$packageNum;

					// Build the download to server link
					$server_att = $server != '' ? ';server=' . $server : '';
					$current_url = ';section=' . $packageSection . ';num=' . $section_count;]]></search>
			<add><![CDATA[
					// See if this filename already exists on the server
					$already_exists = getPackageInfo($base_name);
					$package['download_conflict'] = is_array($already_exists) && in_array($already_exists['id'], $package['possible_ids']) && compareVersions($already_exists['version'], $package['version']) != 0;
					$package['count'] = ++$packageNum;

					// Maybe they have downloaded it but not installed it
					$package['is_downloaded'] = !$package['is_installed'] && (is_array($already_exists) && in_array($already_exists['id'], $package['possible_ids']));
					if ($package['is_downloaded'])
					{
						// Is the available package newer than whats been downloaded?
						$package['is_newer'] = compareVersions($package['version'], $already_exists['version']) > 0;
					}

					// Build the download to server link
					$server_att = $server != '' ? ';server=' . $server : '';
					$current_url = ';section=' . $packageSection . ';num=' . $section_count;]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[					$section_count++;
				}

				$context['package_list'][$packageSection]['text'] = sprintf($txt['mod_section_count'], $section_count);
			}
		}]]></search>
			<add><![CDATA[					$section_count++;
				}

				// Sort them naturally
				usort($context['package_list'][$packageSection]['items'], array($this, 'package_sort'));

				$context['package_list'][$packageSection]['text'] = sprintf($txt['mod_section_count'], $section_count);
			}
		}]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[	}

	/**
	 * Returns a package array filled with the json information
	 *
	 * - Uses the parsed json file from the selected package server]]></search>
			<add><![CDATA[	}

	/**
	 * Case insensitive natural sort for packages
	 *
	 * @param array $a
	 * @param array $b
	 *
	 * @return int
	 */
	public function package_sort($a, $b)
	{
		return strcasecmp($a['name'], $b['name']);
	}

	/**
	 * Returns a package array filled with the json information
	 *
	 * - Uses the parsed json file from the selected package server]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[			strtolower($thisPackage->author) . ':' . $none,
			ucfirst($thisPackage->author) . ':' . $under,
			ucfirst($thisPackage->author) . ':' . $none,
		);
	}
]]></search>
			<add><![CDATA[			strtolower($thisPackage->author) . ':' . $none,
			ucfirst($thisPackage->author) . ':' . $under,
			ucfirst($thisPackage->author) . ':' . $none,
			strtolower($thisPackage->author . ':' . $under),
			strtolower($thisPackage->author . ':' . $none),
		);
	}
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[		}

		// First make sure it's a package.

		$packageInfo = getPackageInfo($url . $_REQUEST['package']);
		if (!is_array($packageInfo))
			fatal_lang_error($packageInfo);]]></search>
			<add><![CDATA[		}

		// First make sure it's a package.
		$packageInfo = getPackageInfo($url . $_REQUEST['package']);
		if (!is_array($packageInfo))
			fatal_lang_error($packageInfo);]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[					continue;

				// If it was already uploaded under another name don't upload it again.
				if ($packageInfo['id'] == $context['package']['id'] && $packageInfo['version'] == $context['package']['version'])
				{
					@unlink($destination);
					loadLanguage('Errors');]]></search>
			<add><![CDATA[					continue;

				// If it was already uploaded under another name don't upload it again.
				if ($packageInfo['id'] == $context['package']['id'] && compareVersions($packageInfo['version'], $context['package']['version']) == 0)
				{
					@unlink($destination);
					loadLanguage('Errors');]]></add>
		</operation>
	</file>
	<file name="CONTROLLERDIR/Auth.controller.php">
		<operation>
			<search position="replace"><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:		BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0
 *
 */
]]></search>
			<add><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:		BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0.7
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[
			// APBoard 2 Login Method.
			$other_passwords[] = md5(crypt($_POST['passwrd'], 'CRYPT_MD5'));
		}
		// The hash should be 40 if it's SHA-1, so we're safe with more here too.
		elseif (!empty($modSettings['enable_password_conversion']) && $pw_strlen === 32)]]></search>
			<add><![CDATA[
			// APBoard 2 Login Method.
			$other_passwords[] = md5(crypt($_POST['passwrd'], 'CRYPT_MD5'));

			// Xenforo 1.2+
			$other_passwords[] = crypt($_POST['passwrd'], $user_settings['passwd']);
		}
		// The hash should be 40 if it's SHA-1, so we're safe with more here too.
		elseif (!empty($modSettings['enable_password_conversion']) && $pw_strlen === 32)]]></add>
		</operation>
	</file>
	<file name="CONTROLLERDIR/Display.controller.php">
		<operation>
			<search position="replace"><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:		BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0.6
 *
 */
]]></search>
			<add><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:		BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0.7
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[
		// Handle approval flags...
		$context['can_reply_approved'] = $context['can_reply'];
		$context['can_reply'] |= $context['can_reply_unapproved'];
		$context['can_quote'] = $context['can_reply'] && (empty($modSettings['disabledBBC']) || !in_array('quote', explode(',', $modSettings['disabledBBC'])));
		$context['can_mark_unread'] = !$user_info['is_guest'] && $settings['show_mark_read'];]]></search>
			<add><![CDATA[
		// Handle approval flags...
		$context['can_reply_approved'] = $context['can_reply'];

		// Guests do not have post_unapproved_replies_own permission, so it's always post_unapproved_replies_any
		if ($user_info['is_guest'] && allowedTo('post_unapproved_replies_any'))
		{
			$context['can_reply_approved'] = false;
		}

		$context['can_reply'] |= $context['can_reply_unapproved'];
		$context['can_quote'] = $context['can_reply'] && (empty($modSettings['disabledBBC']) || !in_array('quote', explode(',', $modSettings['disabledBBC'])));
		$context['can_mark_unread'] = !$user_info['is_guest'] && $settings['show_mark_read'];]]></add>
		</operation>
	</file>
	<file name="CONTROLLERDIR/Memberlist.controller.php">
		<operation>
			<search position="replace"><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:		BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0.5
 *
 */
]]></search>
			<add><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:		BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0.7
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[				$curField = substr($field, 5);
				if (substr($field, 0, 5) === 'cust_' && isset($context['custom_search_fields'][$curField]))
				{
					$customJoin[] = 'LEFT JOIN {db_prefix}custom_fields_data AS cfd' . $curField . ' ON (cfd' . $curField . '.variable = {string:cfd' . $curField . '} AND cfd' . $curField . '.id_member = mem.id_member)';
					$query_parameters['cfd' . $curField] = $curField;
					$fields += array($customCount++ => 'IFNULL(cfd' . $curField . '.value, {string:blank_string})');
					$validFields[] = $field;
				}
			}

			if (empty($fields))
				redirectexit('action=memberlist');]]></search>
			<add><![CDATA[				$curField = substr($field, 5);
				if (substr($field, 0, 5) === 'cust_' && isset($context['custom_search_fields'][$curField]))
				{
					$customJoin[] = 'LEFT JOIN {db_prefix}custom_fields_data AS cfd' . $field . ' ON (cfd' . $field . '.variable = {string:cfd' . $field . '} AND cfd' . $field . '.id_member = mem.id_member)';
					$query_parameters['cfd' . $field] = $curField;
					$fields += array($customCount++ => 'IFNULL(cfd' . $field . '.value, {string:blank_string})');
					$validFields[] = $field;
				}
			}
			$field = $_REQUEST['sort'];
			$curField = substr($field, 5);
			if (substr($field, 0, 5) === 'cust_' && isset($context['custom_search_fields'][$curField]))
			{
				$customJoin[] = 'LEFT JOIN {db_prefix}custom_fields_data AS cfd' . $field . ' ON (cfd' . $field . '.variable = {string:cfd' . $field . '} AND cfd' . $field . '.id_member = mem.id_member)';
				$query_parameters['cfd' . $field] = $curField;
				$validFields[] = $field;
			}

			if (empty($fields))
				redirectexit('action=memberlist');]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[			$where = implode(' ' . $query . ' OR ', $fields) . ' ' . $query . $condition;

			// Find the members from the database.
			$numResults = ml_searchMembers($query_parameters, $customJoin, $where, $_REQUEST['start']);
			$context['page_index'] = constructPageIndex($scripturl . '?action=memberlist;sa=search;search=' . $search . ';fields=' . implode(',', $validFields), $_REQUEST['start'], $numResults, $modSettings['defaultMaxMembers']);
		}
		else]]></search>
			<add><![CDATA[			$where = implode(' ' . $query . ' OR ', $fields) . ' ' . $query . $condition;

			// Find the members from the database.
			$numResults = ml_searchMembers($query_parameters, array_unique($customJoin), $where, $_REQUEST['start']);
			$context['page_index'] = constructPageIndex($scripturl . '?action=memberlist;sa=search;search=' . $search . ';fields=' . implode(',', $validFields), $_REQUEST['start'], $numResults, $modSettings['defaultMaxMembers']);
		}
		else]]></add>
		</operation>
	</file>
	<file name="CONTROLLERDIR/ProfileAccount.controller.php">
		<operation>
			<search position="replace"><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:		BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0.6
 *
 */
]]></search>
			<add><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:		BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0.7
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[			0 => $txt['profile_warning_effect_none'],
		);

		foreach (array('watch', 'moderate', 'mute') as $status)
		{
			if ($modSettings['warning_' . $status] != 110)
			{]]></search>
			<add><![CDATA[			0 => $txt['profile_warning_effect_none'],
		);

		foreach (array('watch', 'moderation', 'mute') as $status)
		{
			if ($modSettings['warning_' . $status] != 110)
			{]]></add>
		</operation>
	</file>
	<file name="CONTROLLERDIR/Register.controller.php">
		<operation>
			<search position="replace"><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:		BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0.5
 *
 */
]]></search>
			<add><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:		BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0.7
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[			if (empty($context['agreement']))
			{
				// No file found or a blank file, log the error so the admin knows there is a problem!
				log_error($txt['registration_agreement_missing'], 'critical');
				fatal_lang_error('registration_disabled', false);
			}]]></search>
			<add><![CDATA[			if (empty($context['agreement']))
			{
				// No file found or a blank file, log the error so the admin knows there is a problem!
				loadLanguage('Errors');
				log_error($txt['registration_agreement_missing'], 'critical');
				fatal_lang_error('registration_disabled', false);
			}]]></add>
		</operation>
	</file>
	<file name="CONTROLLERDIR/Stats.controller.php">
		<operation>
			<search position="replace"><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:		BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0
 *
 */
]]></search>
			<add><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:		BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0.7
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[		// Handle the XMLHttpRequest.
		if (isset($_REQUEST['xml']))
		{
			// Collapsing stats only needs adjustments of the session variables.
			if (!empty($_REQUEST['collapse']))
				obExit(false);]]></search>
			<add><![CDATA[		// Handle the XMLHttpRequest.
		if (isset($_REQUEST['xml']))
		{
			if (empty($year) || empty($month))
			{
				redirectexit('action=stats');
			}

			// Collapsing stats only needs adjustments of the session variables.
			if (!empty($_REQUEST['collapse']))
				obExit(false);]]></add>
		</operation>
	</file>
	<file name="SUBSDIR/Admin.subs.php">
		<operation>
			<search position="replace"><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:  	BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0.4
 *
 * This file contains functions that are specifically done by administrators.
 *]]></search>
			<add><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:  	BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0.7
 *
 * This file contains functions that are specifically done by administrators.
 *]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[		{
			if (substr($entry, -4) === '.php' && !is_dir($dir . '/' . $entry) && $entry !== 'index.php' && $entry !== 'sphinxapi.php')
			{
				// Read the first 4k from the file.... enough for the header.
				$header = file_get_contents($dir . '/' . $entry, false, null, 0, 768);
]]></search>
			<add><![CDATA[		{
			if (substr($entry, -4) === '.php' && !is_dir($dir . '/' . $entry) && $entry !== 'index.php' && $entry !== 'sphinxapi.php')
			{
				if (!is_writable($dir . '/' . $entry))
				{
					continue;
				}
				// Read the first 4k from the file.... enough for the header.
				$header = file_get_contents($dir . '/' . $entry, false, null, 0, 768);
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[		{
			if (substr($entry, -12) == 'template.php' && !is_dir($dirname . '/' . $entry))
			{
				// Read the first 768 bytes from the file.... enough for the header.
				$header = file_get_contents($dirname . '/' . $entry, false, null, 0, 768);
]]></search>
			<add><![CDATA[		{
			if (substr($entry, -12) == 'template.php' && !is_dir($dirname . '/' . $entry))
			{
				if (!is_writable($dirname . '/' . $entry))
				{
					continue;
				}
				// Read the first 768 bytes from the file.... enough for the header.
				$header = file_get_contents($dirname . '/' . $entry, false, null, 0, 768);
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[			{
				if (substr($entry, -4) == '.php' && $entry != 'index.php' && !is_dir($this_lang_path . '/' . $entry))
				{
					// Read the first 768 bytes from the file.... enough for the header.
					$header = file_get_contents($this_lang_path . '/' . $entry, false, null, 0, 768);
]]></search>
			<add><![CDATA[			{
				if (substr($entry, -4) == '.php' && $entry != 'index.php' && !is_dir($this_lang_path . '/' . $entry))
				{
					if (!is_writable($this_lang_path . '/' . $entry))
					{
						continue;
					}
					// Read the first 768 bytes from the file.... enough for the header.
					$header = file_get_contents($this_lang_path . '/' . $entry, false, null, 0, 768);
]]></add>
		</operation>
	</file>
	<file name="SUBSDIR/Boards.subs.php">
		<operation>
			<search position="replace"><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:  	BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0.5
 *
 */
]]></search>
			<add><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:  	BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0.7
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[ *   $boardList: a list of boards grouped by category ID.
 *   $cat_tree:  properties of each category.
 *
 * @package Boards
 */
function getBoardTree()
{
	global $cat_tree, $boards, $boardList;

	$db = database();

	// Getting all the board and category information you'd ever wanted.
	$request = $db->query('', '
		SELECT
			IFNULL(b.id_board, 0) AS id_board, b.id_parent, b.name AS board_name, b.description, b.child_level,
			b.board_order, b.count_posts, b.member_groups, b.id_theme, b.override_theme, b.id_profile, b.redirect,
			b.num_posts, b.num_topics, b.deny_member_groups, c.id_cat, c.name AS cat_name, c.cat_order, c.can_collapse
		FROM {db_prefix}categories AS c
			LEFT JOIN {db_prefix}boards AS b ON (b.id_cat = c.id_cat)
		ORDER BY c.cat_order, b.child_level, b.board_order',
		array(
		)]]></search>
			<add><![CDATA[ *   $boardList: a list of boards grouped by category ID.
 *   $cat_tree:  properties of each category.
 *
 * @param array $query
 *
 * @package Boards
 */
function getBoardTree($query = array())
{
	global $cat_tree, $boards, $boardList;

	$db = database();

	// Addons may want to add their own information to the board table.
	call_integration_hook('integrate_board_tree_query', array(&$query));

	// Getting all the board and category information you'd ever wanted.
	$request = $db->query('', '
		SELECT
			IFNULL(b.id_board, 0) AS id_board, b.id_parent, b.name AS board_name, b.description, b.child_level,
			b.board_order, b.count_posts, b.member_groups, b.id_theme, b.override_theme, b.id_profile, b.redirect,
			b.num_posts, b.num_topics, b.deny_member_groups, c.id_cat, c.name AS cat_name, c.cat_order, c.can_collapse' . (!empty($query['select']) ?
			$query['select'] : '') . '
		FROM {db_prefix}categories AS c
			LEFT JOIN {db_prefix}boards AS b ON (b.id_cat = c.id_cat)' . (!empty($query['join']) ?
			$query['join'] : '') . '
		ORDER BY c.cat_order, b.child_level, b.board_order',
		array(
		)]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[				$boards[$row['id_board']]['tree'] = &$boards[$row['id_parent']]['tree']['children'][$row['id_board']];
			}
		}
	}
	$db->free_result($request);
]]></search>
			<add><![CDATA[				$boards[$row['id_board']]['tree'] = &$boards[$row['id_parent']]['tree']['children'][$row['id_board']];
			}
		}

		// Let integration easily add data to $boards and $cat_tree
		call_integration_hook('integrate_board_tree', array($row));
	}
	$db->free_result($request);
]]></add>
		</operation>
	</file>
	<file name="SUBSDIR/Cache.subs.php">
		<operation>
			<search position="replace"><![CDATA[	}

	// Invalidate cache, to be sure!
	// ... as long as Load.php can be modified, anyway.
	@touch(SOURCEDIR . '/Load.php');

	// Give addons a way to trigger cache cleaning.
	call_integration_hook('integrate_clean_cache');]]></search>
			<add><![CDATA[	}

	// Invalidate cache, to be sure!
	// ... as long as index.php can be modified, anyway.
	@touch(CACHEDIR . '/index.php');

	// Give addons a way to trigger cache cleaning.
	call_integration_hook('integrate_clean_cache');]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[
	// no need to do this every time, slows us down :P
	if (empty($key_prefix))
		$key_prefix = md5($boardurl . filemtime(SOURCEDIR . '/Load.php')) . '-ELK-';

	return $key_prefix . ((empty($cache_accelerator) || $cache_accelerator === 'filebased') ? strtr($key, ':/', '-_') : $key);
}]]></search>
			<add><![CDATA[
	// no need to do this every time, slows us down :P
	if (empty($key_prefix))
		$key_prefix = md5($boardurl . filemtime(CACHEDIR . '/index.php')) . '-ELK-';

	return $key_prefix . ((empty($cache_accelerator) || $cache_accelerator === 'filebased') ? strtr($key, ':/', '-_') : $key);
}]]></add>
		</operation>
	</file>
	<file name="SUBSDIR/EmailFormat.class.php">
		<operation>
			<search position="replace"><![CDATA[ * @copyright ElkArte Forum contributors
 * @license   BSD http://opensource.org/licenses/BSD-3-Clause
 *
 * @version 1.0.2
 *
 */
]]></search>
			<add><![CDATA[ * @copyright ElkArte Forum contributors
 * @license   BSD http://opensource.org/licenses/BSD-3-Clause
 *
 * @version 1.0.7
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[			if ($this->_body_array[$i]['content'] == '')
			{
				if ((isset($this->_body_array[$i - 1])) && ($this->_body_array[$i - 1]['content'] !== "\n") && (substr($this->_body_array[$i - 1]['content'], 0, 1) !== '[') && ($this->_body_array[$i - 1]['length'] > $this->_maillist_short_line))
					$this->_body_array[$i]['content'] = "\n";
			}
			// Lists like a. a) 1. 1)
			elseif ($this->_body_array[$i]['list_item'])]]></search>
			<add><![CDATA[			if ($this->_body_array[$i]['content'] == '')
			{
				if ((isset($this->_body_array[$i - 1])) && ($this->_body_array[$i - 1]['content'] !== "\n") && (substr($this->_body_array[$i - 1]['content'], 0, 1) !== '[') && ($this->_body_array[$i - 1]['length'] > $this->_maillist_short_line))
					$this->_body_array[$i]['content'] = "\n\n";
			}
			// Lists like a. a) 1. 1)
			elseif ($this->_body_array[$i]['list_item'])]]></add>
		</operation>
	</file>
	<file name="SUBSDIR/Graphics.subs.php">
		<operation>
			<search position="replace"><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:  	BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0.4
 *
 */
]]></search>
			<add><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:  	BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0.7
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[			$dest_width = empty($max_width) ? $src_width : $max_width;
			$dest_height = empty($max_height) ? $src_height : $max_height;

			// Create a new image in our prefered format and resize it if needed
			$imagick->setImageFormat($default_formats[$preferred_format]);
			$imagick->resizeImage($dest_width, $dest_height, Imagick::FILTER_LANCZOS, 1, true);]]></search>
			<add><![CDATA[			$dest_width = empty($max_width) ? $src_width : $max_width;
			$dest_height = empty($max_height) ? $src_height : $max_height;

			// Set jpeg image quality to 80
			if ($default_formats[$preferred_format] === 'jpeg')
			{
				$imagick->setImageCompression(Imagick::COMPRESSION_JPEG);
				$imagick->setImageCompressionQuality(80);
			}

			// Create a new image in our prefered format and resize it if needed
			$imagick->setImageFormat($default_formats[$preferred_format]);
			$imagick->resizeImage($dest_width, $dest_height, Imagick::FILTER_LANCZOS, 1, true);]]></add>
		</operation>
	</file>
	<file name="SUBSDIR/Html2BBC.class.php">
		<operation>
			<search position="replace"><![CDATA[ * @copyright ElkArte Forum contributors
 * @license   BSD http://opensource.org/licenses/BSD-3-Clause
 *
 * @version 1.0.2
 *
 */
]]></search>
			<add><![CDATA[ * @copyright ElkArte Forum contributors
 * @license   BSD http://opensource.org/licenses/BSD-3-Clause
 *
 * @version 1.0.7
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[				break;
			case 'div':
				$bbc = $this->strip_newlines ? str_replace("\n", ' ', $this->_convert_styles($node)) : $this->_convert_styles($node);
				break;
			case 'em':
			case 'i':]]></search>
			<add><![CDATA[				break;
			case 'div':
				$bbc = $this->strip_newlines ? str_replace("\n", ' ', $this->_convert_styles($node)) : $this->_convert_styles($node);
				$bbc = preg_replace('~ {2,}~', '&nbsp; ', $bbc);
				break;
			case 'em':
			case 'i':]]></add>
		</operation>
	</file>
	<file name="SUBSDIR/Html2Md.class.php">
		<operation>
			<search position="replace"><![CDATA[ * @copyright ElkArte Forum contributors
 * @license   BSD http://opensource.org/licenses/BSD-3-Clause
 *
 * @version 1.0.4
 *
 */
]]></search>
			<add><![CDATA[ * @copyright ElkArte Forum contributors
 * @license   BSD http://opensource.org/licenses/BSD-3-Clause
 *
 * @version 1.0.7
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[	private $_textEscapeRegex = array();

	/**
	 * Gets everything started using the built in or external parser
	 *
	 * @param string $html string of html to convert to MD text]]></search>
			<add><![CDATA[	private $_textEscapeRegex = array();

	/**
	 * The passed html string to convert
	 * @var string
	 */
	public $html;

	/**
	 * The markdown equivalent to the  html string
	 * @var string
	 */
	public $markdown;

	/**
	 * Gets everything started using the built in or external parser
	 *
	 * @param string $html string of html to convert to MD text]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[	public function __construct($html)
	{
		// Up front, remove whitespace between html tags
		$html = preg_replace('/(?:(?<=\>)|(?<=\/\>))(\s+)(?=\<\/?)/', '', $html);

		// The XML parser will not fix these for us
		$html = strtr($html, array('?<' => '?&LT;', '?>' => '?&GT;') );

		// Using PHP built in functions ...
		if (class_exists('DOMDocument'))
		{]]></search>
			<add><![CDATA[	public function __construct($html)
	{
		// Up front, remove whitespace between html tags
		$this->html = preg_replace('/(?:(?<=\>)|(?<=\/\>))(\s+)(?=\<\/?)/', '', $html);

		// The XML parser will not deal gracefully with these
		$this->html = strtr($this->html, array(
			'?<' => "|?|<",
			'?>' => "|?|>",
			'>?' => ">|?|",
			'<?' => "&lt?"
		));

		// Set the dom parser to use and load the HTML to the parser
		$this->_set_parser();

		// Initialize the regex array to escape text areas so markdown does
		// not interpret plain text as markdown syntax
		$this->_textEscapeRegex = array(
			// Things that may convert to an hr --- or - - - etc
			'([-*_])([ ]{0,2}\1){2,}' => '\\\\$0|',
			// or **stuff** => \*\*stuff\*\*
			'\*\*([^*\s]+)\*\*' => '\*\*$1\*\*',
			// or versions of *italic* __italic__ _italic_
			'\*([^*\s]+)\*' => '\*$1\*',
			'__(?! |_)(.+)(?!<_| )__' => '\_\_$1\_\_',
			'_(?! |_)(.+)(?!<_| )_' => '\_$1\_',
			// nor `code`
			'`(.+)`' => '\`$1\`',
			// or links
			'\[(.+)\](\s*\()' => '\[$1\]$2',
			'\[(.+)\](\s*)\[(.*)\]' => '\[$1\]$2\[$3\]',
		);
	}

	/**
	 * Set the DOM parser for class, loads the supplied HTML
	 */
	private function _set_parser()
	{
		// Using PHP built in functions ...
		if (class_exists('DOMDocument'))
		{]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[			$this->doc = new DOMDocument();
			$this->doc->preserveWhiteSpace = false;
			$this->doc->encoding = 'UTF-8';
			$this->doc->loadHTML('<?xml encoding="UTF-8">' . $html);

			// Set the error handle back to what it was, and flush
			libxml_use_internal_errors($previous);]]></search>
			<add><![CDATA[			$this->doc = new DOMDocument();
			$this->doc->preserveWhiteSpace = false;
			$this->doc->encoding = 'UTF-8';
			$this->doc->loadHTML('<?xml encoding="UTF-8">' . $this->html);

			// Set the error handle back to what it was, and flush
			libxml_use_internal_errors($previous);]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[		{
			$this->_parser = false;
			require_once(EXTDIR . '/simple_html_dom.php');
			$this->doc = str_get_html($html, true, true, 'UTF-8', false);
		}

		// Initialize the regex array to escape text areas so markdown does
		// not interpret plain text as markdown syntax
		$this->_textEscapeRegex = array(
			// Things that may convert to an hr --- or - - - etc
			'([-*_])([ ]{0,2}\1){2,}' => '\\\\$0|',
			// or **stuff** => \*\*stuff\*\*
			'\*\*([^*\s]+)\*\*' => '\*\*$1\*\*',
			// or versions of *italic* __italic__ _italic_
			'\*([^*\s]+)\*' => '\*$1\*',
			'__(?! |_)(.+)(?!<_| )__' => '\_\_$1\_\_',
			'_(?! |_)(.+)(?!<_| )_' => '\_$1\_',
			// nor `code`
			'`(.+)`' => '\`$1\`',
			// or links
			'\[(.+)\](\s*\()' => '\[$1\]$2',
			'\[(.+)\](\s*)\[(.*)\]' => '\[$1\]$2\[$3\]',
		);
	}

	/**]]></search>
			<add><![CDATA[		{
			$this->_parser = false;
			require_once(EXTDIR . '/simple_html_dom.php');
			$this->doc = str_get_html($this->html, true, true, 'UTF-8', false);
		}
	}

	/**]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[		$this->_convert_childNodes($body);

		// Done replacing HTML elements, now get the converted DOM tree back into a string
		$markdown = ($this->_parser) ? $this->doc->saveHTML() : $this->doc->save();

		if ($this->_parser)
		{
			// Using the internal DOM methods we need to do a little extra work
			$markdown = html_entity_decode(htmlspecialchars_decode($markdown, ENT_QUOTES), ENT_QUOTES, 'UTF-8');
			if (preg_match('~<body>(.*)</body>~s', $markdown, $body))
				$markdown = $body[1];
			elseif (preg_match('~<html>(.*)</html>~s', $markdown, $body))
				$markdown = $body[1];
		}

		// Remove non breakable spaces that may be hiding in here
		$markdown = str_replace("\xC2\xA0\x20", ' ', $markdown);
		$markdown = str_replace("\xC2\xA0", ' ', $markdown);

		// Remove any "bonus" tags
		if ($this->strip_tags)
			$markdown = strip_tags($markdown);

		// Strip the chaff and any excess blank lines we may have produced
		$markdown = trim($markdown);
		$markdown = preg_replace("~(\n(\s)?){3,}~", "\n\n", $markdown);
		$markdown = preg_replace("~(^\s\s\n){3,}~", "  \n  \n", $markdown);

		// Wordwrap?
		if (!empty($this->body_width))
			$markdown = $this->_utf8_wordwrap($markdown, $this->body_width, $this->line_end);

		return $markdown;
	}

	/**]]></search>
			<add><![CDATA[		$this->_convert_childNodes($body);

		// Done replacing HTML elements, now get the converted DOM tree back into a string
		$this->markdown = ($this->_parser) ? $this->doc->saveHTML() : $this->doc->save();

		// Using the internal DOM methods requires we need to do a little extra work
		if ($this->_parser)
		{
			$this->markdown = html_entity_decode(htmlspecialchars_decode($this->markdown, ENT_QUOTES), ENT_QUOTES, 'UTF-8');

			if (preg_match('~<body>(.*)</body>~s', $this->markdown, $body))
				$this->markdown = $body[1];
			elseif (preg_match('~<html>(.*)</html>~s', $this->markdown, $body))
				$this->markdown = $body[1];
		}

		// Clean up any excess spacing etc
		$this->_clean_markdown();

		// Wordwrap?
		if (!empty($this->body_width))
			$this->markdown = $this->_utf8_wordwrap($this->markdown, $this->body_width, $this->line_end);

		return $this->markdown;
	}

	/**
	 * Normalize any spacing and excess blank lines that may have been generated
	 */
	private function _clean_markdown()
	{
		// Remove non breakable spaces that may be hiding in here
		$this->markdown = str_replace("\xC2\xA0\x20", ' ', $this->markdown);
		$this->markdown = str_replace("\xC2\xA0", ' ', $this->markdown);

		// Remove any "bonus" tags
		if ($this->strip_tags)
			$this->markdown = strip_tags($this->markdown);

		// Replace content that we "hide" from the XML parsers
		$this->markdown = strtr($this->markdown, array(
			"|?|" => '?',
			"&lt?" => '<?'
		));

		// Strip the chaff and any excess blank lines we may have produced
		$this->markdown = trim($this->markdown);
		$this->markdown = preg_replace("~(\n(\s)?){3,}~", "\n\n", $this->markdown);
		$this->markdown = preg_replace("~(^\s\s\n){3,}~m", "  \n  \n", $this->markdown);
		$this->markdown = preg_replace("~(^\s\s\r?\n){3,}~m", "  \n  \n", $this->markdown);
		$this->markdown = preg_replace("~(^\s\s(?:\r?\n){2}){3,}~m", "  \n  \n", $this->markdown);
	}

	/**]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[				$markdown = $this->_convert_blockquote($node);
				break;
			case 'br':
				$markdown = '  ' . $this->line_end;
				break;
			case 'center':
				$markdown = $this->line_end . $this->_get_value($node) . $this->line_end;]]></search>
			<add><![CDATA[				$markdown = $this->_convert_blockquote($node);
				break;
			case 'br':
				// DomDocument strips empty lines, this prevents that
				$markdown = "\xC2\xA0\xC2\xA0" . $this->line_break;
				break;
			case 'center':
				$markdown = $this->line_end . $this->_get_value($node) . $this->line_end;]]></add>
		</operation>
	</file>
	<file name="SUBSDIR/Mail.subs.php">
		<operation>
			<search position="replace"><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:  	BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0.3
 *
 */
]]></search>
			<add><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:  	BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0.7
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[		if ($use_sendmail)
		{
			$email['subject'] = strtr($email['subject'], array("\r" => '', "\n" => ''));

			if (!empty($modSettings['mail_strip_carriage']))
			{]]></search>
			<add><![CDATA[		if ($use_sendmail)
		{
			$email['subject'] = strtr($email['subject'], array("\r" => '', "\n" => ''));
			$email['body_fail'] = $email['body'];

			if (!empty($modSettings['mail_strip_carriage']))
			{]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[				$unq_head = md5($scripturl . microtime() . rand()) . '-' . $email['message_id'];
				$encoded_unq_head = base64_encode($line_break . $line_break . '[' . $unq_head . ']' . $line_break);
				$unq_id = ($need_break ? $line_break : '') . 'Message-ID: <' . $unq_head . strstr(empty($modSettings['maillist_mail_from']) ? $webmaster_email : $modSettings['maillist_mail_from'], '@') . '>';
				$email['body_fail'] = $email['body'];
				$email['body'] = mail_insert_key($email['body'], $unq_head, $encoded_unq_head, $line_break);
			}
			elseif ($email['message_id'] !== null && empty($modSettings['mail_no_message_id']))]]></search>
			<add><![CDATA[				$unq_head = md5($scripturl . microtime() . rand()) . '-' . $email['message_id'];
				$encoded_unq_head = base64_encode($line_break . $line_break . '[' . $unq_head . ']' . $line_break);
				$unq_id = ($need_break ? $line_break : '') . 'Message-ID: <' . $unq_head . strstr(empty($modSettings['maillist_mail_from']) ? $webmaster_email : $modSettings['maillist_mail_from'], '@') . '>';
				$email['body'] = mail_insert_key($email['body'], $unq_head, $encoded_unq_head, $line_break);
			}
			elseif ($email['message_id'] !== null && empty($modSettings['mail_no_message_id']))]]></add>
		</operation>
	</file>
	<file name="SUBSDIR/Memberlist.subs.php">
		<operation>
			<search position="replace"><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:  	BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0.4
 *
 */
]]></search>
			<add><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:  	BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0.7
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[	$request = $db->query('', '
		SELECT COUNT(*)
		FROM {db_prefix}members AS mem
			LEFT JOIN {db_prefix}membergroups AS mg ON (mg.id_group = CASE WHEN mem.id_group = {int:regular_id_group} THEN mem.id_post_group ELSE mem.id_group END)' .
			(empty($customJoin) ? '' : implode('
			', $customJoin)) . '
		WHERE (' . $where . ')
			AND mem.is_activated = {int:is_activated}',]]></search>
			<add><![CDATA[	$request = $db->query('', '
		SELECT COUNT(*)
		FROM {db_prefix}members AS mem
			LEFT JOIN {db_prefix}membergroups AS mg ON (mg.id_group = CASE WHEN mem.id_group = {int:regular_id_group} THEN mem.id_post_group ELSE mem.id_group END)
			' . (empty($customJoin) ? '' : implode('
			', $customJoin)) . '
		WHERE (' . $where . ')
			AND mem.is_activated = {int:is_activated}',]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[		SELECT mem.id_member
		FROM {db_prefix}members AS mem
			LEFT JOIN {db_prefix}log_online AS lo ON (lo.id_member = mem.id_member)
			LEFT JOIN {db_prefix}membergroups AS mg ON (mg.id_group = CASE WHEN mem.id_group = {int:regular_id_group} THEN mem.id_post_group ELSE mem.id_group END)' .
			(empty($customJoin) ? '' : implode('
			', $customJoin)) . '
		WHERE (' . $where . ')
			AND mem.is_activated = {int:is_activated}]]></search>
			<add><![CDATA[		SELECT mem.id_member
		FROM {db_prefix}members AS mem
			LEFT JOIN {db_prefix}log_online AS lo ON (lo.id_member = mem.id_member)
			LEFT JOIN {db_prefix}membergroups AS mg ON (mg.id_group = CASE WHEN mem.id_group = {int:regular_id_group} THEN mem.id_post_group ELSE mem.id_group END)
			' . (empty($customJoin) ? '' : implode('
			', $customJoin)) . '
		WHERE (' . $where . ')
			AND mem.is_activated = {int:is_activated}]]></add>
		</operation>
	</file>
	<file name="SUBSDIR/Members.subs.php">
		<operation>
			<search position="replace"><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:  	BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0.5
 *
 */
]]></search>
			<add><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:  	BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0.7
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[	// New password hash
	require_once(SUBSDIR . '/Auth.subs.php');

	// Some of these might be overwritten. (the lower ones that are in the arrays below.)
	$regOptions['register_vars'] = array(
		'member_name' => $regOptions['username'],
		'email_address' => $regOptions['email'],
		'passwd' => validateLoginPassword($regOptions['password'], '', $regOptions['username'], true),
		'password_salt' => substr(md5(mt_rand()), 0, 4) ,
		'posts' => 0,
		'date_registered' => !empty($regOptions['time']) ? $regOptions['time'] : time(),
		'member_ip' => $regOptions['interface'] == 'admin' ? '127.0.0.1' : $regOptions['ip'],
		'member_ip2' => $regOptions['interface'] == 'admin' ? '127.0.0.1' : $regOptions['ip2'],
		'validation_code' => $validation_code,
		'real_name' => $regOptions['username'],
		'personal_text' => $modSettings['default_personal_text'],
		'pm_email_notify' => 1,
		'id_theme' => 0,]]></search>
			<add><![CDATA[	// New password hash
	require_once(SUBSDIR . '/Auth.subs.php');

	// @since 1.0.7 - This is necessary because validateLoginPassword
	// uses a pass-by-ref and would convert to hash $regOptions['password']
	// making it impossible to send the reminder email and even integrate
	// the registration
	$password = $regOptions['password'];

	// Some of these might be overwritten. (the lower ones that are in the arrays below.)
	$regOptions['register_vars'] = array(
		'member_name' => $regOptions['username'],
		'email_address' => $regOptions['email'],
		'passwd' => validateLoginPassword($password, '', $regOptions['username'], true),
		'password_salt' => substr(md5(mt_rand()), 0, 4) ,
		'posts' => 0,
		'date_registered' => !empty($regOptions['time']) ? $regOptions['time'] : time(),
		'member_ip' => $regOptions['interface'] == 'admin' ? '127.0.0.1' : $regOptions['ip'],
		'member_ip2' => $regOptions['interface'] == 'admin' ? '127.0.0.1' : $regOptions['ip2'],
		'validation_code' => $validation_code,
		'real_name' => !empty($regOptions['real_name']) ? $regOptions['real_name'] : $regOptions['username'],
		'personal_text' => $modSettings['default_personal_text'],
		'pm_email_notify' => 1,
		'id_theme' => 0,]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[	if ($query)
	{
		$data = retrieveMemberData($conditions);
		$members_id = $data['members'];
	}
	else
	{]]></search>
			<add><![CDATA[	if ($query)
	{
		$data = retrieveMemberData($conditions);
		$members_id = array();
		foreach ($data['member_info'] as $member)
			$members_id[] = $member['username'];
	}
	else
	{]]></add>
		</operation>
	</file>
	<file name="SUBSDIR/Menu.subs.php">
		<operation>
			<search position="replace"><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:  	BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0
 *
 */
]]></search>
			<add><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:  	BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0.7
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[		}
	}

	// Should we use a custom base url, or use the default?
	$menu_context['base_url'] = isset($menuOptions['base_url']) ? $menuOptions['base_url'] : $scripturl . '?action=' . $menu_context['current_action'];
]]></search>
			<add><![CDATA[		}
	}

	if (!isset($context['current_subaction']) && isset($menu_context['current_subsection']))
	{
		$context['current_subaction'] = $menu_context['current_subsection'];
	}

	// Should we use a custom base url, or use the default?
	$menu_context['base_url'] = isset($menuOptions['base_url']) ? $menuOptions['base_url'] : $scripturl . '?action=' . $menu_context['current_action'];
]]></add>
		</operation>
	</file>
	<file name="SUBSDIR/SettingsForm.class.php">
		<operation>
			<search position="replace"><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:  	BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0.4
 *
 *
 * Adding options to one of the setting screens isn't hard.]]></search>
			<add><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:  	BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0.7
 *
 *
 * Adding options to one of the setting screens isn't hard.]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[				}
				elseif (strncasecmp($settingsArray[$i], '$' . $var, 1 + strlen($var)) == 0)
				{
					$comment = strstr(substr($settingsArray[$i], strpos($settingsArray[$i], ';')), '#');
					$settingsArray[$i] = '$' . $var . ' = ' . $val . ';' . ($comment == '' ? '' : "\t\t" . rtrim($comment)) . "\n";

					// This one's been 'used', so to speak.]]></search>
			<add><![CDATA[				}
				elseif (strncasecmp($settingsArray[$i], '$' . $var, 1 + strlen($var)) == 0)
				{
					$comment = strstr(substr(un_htmlspecialchars($settingsArray[$i]), strpos(un_htmlspecialchars($settingsArray[$i]), ';')), '#');
					$settingsArray[$i] = '$' . $var . ' = ' . $val . ';' . ($comment == '' ? '' : "\t\t" . rtrim($comment)) . "\n";

					// This one's been 'used', so to speak.]]></add>
		</operation>
	</file>
	<file name="SUBSDIR/Topic.subs.php">
		<operation>
			<search position="replace"><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:  	BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0.5
 *
 */
]]></search>
			<add><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:  	BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0.7
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[	if ($split1_first_msg > $split2_first_msg)
		fatal_lang_error('split_first_post', false);

	// We're off to insert the new topic!  Use 0 for now to avoid UNIQUE errors.
	$db->insert('',
		'{db_prefix}topics',]]></search>
			<add><![CDATA[	if ($split1_first_msg > $split2_first_msg)
		fatal_lang_error('split_first_post', false);

	// The message that is starting the new topic may have likes, these become topic likes
	require_once(SUBSDIR . '/Likes.subs.php');
	$split2_first_msg_likes = messageLikeCount($split2_first_msg);

	// We're off to insert the new topic!  Use 0 for now to avoid UNIQUE errors.
	$db->insert('',
		'{db_prefix}topics',]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[			'unapproved_posts' => 'int',
			'approved' => 'int',
			'is_sticky' => 'int',
		),
		array(
			(int) $id_board, $split2_firstMem, $split2_lastMem, 0,
			0, $split2_replies, $split2_unapprovedposts, (int) $split2_approved, 0,
		),
		array('id_topic')
	);]]></search>
			<add><![CDATA[			'unapproved_posts' => 'int',
			'approved' => 'int',
			'is_sticky' => 'int',
			'num_likes' => 'int',
		),
		array(
			(int) $id_board, $split2_firstMem, $split2_lastMem, 0,
			0, $split2_replies, $split2_unapprovedposts, (int) $split2_approved, 0, $split2_first_msg_likes,
		),
		array('id_topic')
	);]]></add>
		</operation>
	</file>
	<file name="THEMEDIR/GenericBoards.template.php">
		<operation>
			<search position="replace"><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:  	BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0.5
 *
 */
]]></search>
			<add><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:  	BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0.7
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[	$num_groups = 2;
	$optimal_boards = round($total_boards / $num_groups);
	$groups = array(0 => array());
	$group_totals = array(0 => 0);
	$current_streak = 0;
	$current_group = 0;
]]></search>
			<add><![CDATA[	$num_groups = 2;
	$optimal_boards = round($total_boards / $num_groups);
	$groups = array(0 => array());
	$group_totals = array(0 => 0, 1 => 0);
	$current_streak = 0;
	$current_group = 0;
]]></add>
		</operation>
	</file>
	<file name="THEMEDIR/ManageNews.template.php">
		<operation>
			<search position="replace"><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:  	BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0
 *
 */
]]></search>
			<add><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:  	BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0.7
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[	<div id="admincenter">
		<form name="newsmodify" action="', $scripturl, '?action=admin;area=news;sa=mailingsend" method="post" accept-charset="UTF-8">
			<h3 class="category_header">
				<a class="hdicon cat_img_helptopics help" href="', $scripturl, '?action=quickhelp;help=email_members" onclick="return reqOverlayDiv(this.href);" title="', $txt['help'], '"></a> ', $txt['admin_newsletters'], '
			</h3>
			<div class="information">
				', str_replace('{help_emailmembers}', $scripturl . '?action=quickhelp;help=emailmembers" onclick="return reqOverlayDiv(this.href);', $txt['email_variables']), ']]></search>
			<add><![CDATA[	<div id="admincenter">
		<form name="newsmodify" action="', $scripturl, '?action=admin;area=news;sa=mailingsend" method="post" accept-charset="UTF-8">
			<h3 class="category_header">
				', $txt['admin_newsletters'], '
			</h3>
			<div class="information">
				', str_replace('{help_emailmembers}', $scripturl . '?action=quickhelp;help=emailmembers" onclick="return reqOverlayDiv(this.href);', $txt['email_variables']), ']]></add>
		</operation>
	</file>
	<file name="THEMEDIR/Memberlist.template.php">
		<operation>
			<search position="replace"><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:  	BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0.5
 *
 */
]]></search>
			<add><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:  	BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0.7
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[		<h2 class="category_header">
			<span class="floatleft">', $txt['members_list'], '</span>';

	if (empty($context['in_search']))
		echo '
				<span class="floatright letter_links">', $context['letter_links'], '</span>';
]]></search>
			<add><![CDATA[		<h2 class="category_header">
			<span class="floatleft">', $txt['members_list'], '</span>';

	if (!empty($context['letter_links']))
		echo '
				<span class="floatright letter_links">', $context['letter_links'], '</span>';
]]></add>
		</operation>
	</file>
	<file name="THEMEDIR/MessageIndex.template.php">
		<operation>
			<search position="replace"><![CDATA[
	echo '
	<div id="topic_icons" class="description">
		<div class="floatright" id="message_index_jump_to">&nbsp;</div>';

	if (!$context['no_topic_listing'])
		template_basicicons_legend();]]></search>
			<add><![CDATA[
	echo '
	<div id="topic_icons" class="description">
		<div class="qaction_row" id="message_index_jump_to">&nbsp;</div>';

	if (!$context['no_topic_listing'])
		template_basicicons_legend();]]></add>
		</operation>
	</file>
	<file name="THEMEDIR/PackageServers.template.php">
		<operation>
			<search position="replace"><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:  	BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0.4
 *
 */
]]></search>
			<add><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:  	BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0.7
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[
			foreach ($packageSection['items'] as $id => $package)
			{
				echo '
							<li>';
					// 1. Some addon [ Download ].
					echo '
							<strong>
								<img id="ps_img_', $i, '_pkg_', $id, '" src="', $settings['images_url'], '/selected_open.png" alt="*" style="display: none;" /> ',
								$package['can_install'] ? '<strong>' . $package['name'] . '</strong> <a class="linkbutton" href="' . $package['download']['href'] . '">' . $txt['download'] . '</a>' : $package['name'];

					// Mark as installed and current?
					if ($package['is_installed'] && !$package['is_newer'])
						echo '<img src="', $settings['images_url'], '/icons/package_', $package['is_current'] ? 'installed' : 'old', '.png" class="centericon package_img" alt="', $package['is_current'] ? $txt['package_installed_current'] : $txt['package_installed_old'], '" />';

					echo '
							</strong>
							<ul id="package_section_', $i, '_pkg_', $id, '" class="package_section">';

					// Show the addon type?
					if ($package['type'] != '')
						echo '
								<li class="package_section">', $txt['package_type'], ':&nbsp; ', Util::ucwords(Util::strtolower($package['type'])), '</li>';

					// Show the version number?
					if ($package['version'] != '')
						echo '
								<li class="package_section">', $txt['mod_version'], ':&nbsp; ', $package['version'], '</li>';

					// Show the last date?
					if ($package['date'] != '')
						echo '
								<li class="package_section">', $txt['mod_date'], ':&nbsp; ', $package['date'], '</li>';

					// How 'bout the author?
					if (!empty($package['author']))
						echo '
								<li class="package_section">', $txt['mod_author'], ':&nbsp; ', $package['author'], '</li>';

					// Nothing but hooks ?
					if ($package['hooks'] != '' && in_array($package['hooks'] , array('yes', 'true')))
						echo '
								<li class="package_section">', $txt['mod_hooks'], ' <i class="fa fa-check-circle-o"></i></li>';

					// Location of file: http://someplace/.
					echo '
								<ul style="margin-left: 5em">
									<li class="package_section"><i class="fa fa-cloud-download"></i> ', $txt['file_location'], ':&nbsp; <a href="', $package['server']['download'], '">', $package['server']['download'], '</a></li>';

					// Location of issues?
					if (!empty($package['server']['bugs']))
						echo '
									<li class="package_section"><i class="fa fa-bug"></i> ', $txt['bug_location'], ':&nbsp; <a href="', $package['server']['bugs'], '">', $package['server']['bugs'], '</a></li>';

					// Location of support?
					if (!empty($package['server']['support']))
						echo '
									<li class="package_section"><i class="fa fa-support"></i> ', $txt['support_location'], ':&nbsp; <a href="', $package['server']['support'], '">', $package['server']['support'], '</a></li>';

					// Description: bleh bleh!
					echo '
								</ul>
								<li class="package_section"><div class="infobox">', $txt['package_description'], ':&nbsp; ', $package['description'], '</div></li>
							</ul>';]]></search>
			<add><![CDATA[
			foreach ($packageSection['items'] as $id => $package)
			{
				// 1. Some addon [ Download ].
				echo '
						<li>
							<img id="ps_img_', $i, '_pkg_', $id, '" src="', $settings['images_url'], '/selected_open.png" alt="*" style="display: none;" /> ';

				// Installed but newer one is available
				if ($package['is_installed'] && $package['is_newer'])
				{
					echo '
							<span class="package_id">', $package['name'], '</span>&nbsp;<a class="linkbutton" href="', $package['download']['href'], '">', $txt['download'], '</a>&nbsp;',
					sprintf($txt['package_update'], '<i class="fa fa-exclamation-circle" title="' . $txt['package_installed_old'] . '"></i>', $txt['package_installed']);
				}
				// Installed but nothing newer is available
				else if ($package['is_installed'])
				{
					echo '
							<span class="package_id">', $package['name'], '</span>&nbsp;',
					sprintf($txt['package_current'], '<i class="fa fa-check" title="' . $txt['package_installed_current'] . '"></i>', $txt['package_installed']);
				}
				// Downloaded, but there is a more recent version available
				else if ($package['is_downloaded'] && $package['is_newer'])
				{
					echo '
							<span class="package_id">', $package['name'], '</span>&nbsp;<a class="linkbutton" href="', $package['download']['href'], '">', $txt['download'], '</a>&nbsp;',
					sprintf($txt['package_update'], '<i class="fa fa-minus-circle" title="' . $txt['package_installed_old'] . '"></i>', $txt['package_downloaded']);
				}
				// Downloaded, and its current
				else if ($package['is_downloaded'])
				{
					echo '
							<span class="package_id">', $package['name'], '</span>&nbsp;',
					sprintf($txt['package_current'], '<i class="fa fa-plus-circle" title="' . $txt['package_installed_current'] . '"></i>', $txt['package_downloaded']);
				}
				// Not downloaded or installed
				else
				{
					echo '
							<span class="package_id">', $package['name'], '</span>&nbsp;<a class="linkbutton" href="', $package['download']['href'], '">', $txt['download'], '</a>';
				}

				echo '
							<ul id="package_section_', $i, '_pkg_', $id, '" class="package_section">';

				// Show the addon type?
				if ($package['type'] != '')
					echo '
								<li class="package_section">', $txt['package_type'], ':&nbsp; ', Util::ucwords(Util::strtolower($package['type'])), '</li>';

				// Show the version number?
				if ($package['version'] != '')
					echo '
								<li class="package_section">', $txt['mod_version'], ':&nbsp; ', $package['version'], '</li>';

				// Show the last date?
				if ($package['date'] != '')
					echo '
								<li class="package_section">', $txt['mod_date'], ':&nbsp; ', $package['date'], '</li>';

				// How 'bout the author?
				if (!empty($package['author']))
					echo '
								<li class="package_section">', $txt['mod_author'], ':&nbsp; ', $package['author'], '</li>';

				// Nothing but hooks ?
				if ($package['hooks'] != '' && in_array($package['hooks'] , array('yes', 'true')))
					echo '
								<li class="package_section">', $txt['mod_hooks'], ' <i class="fa fa-check-circle-o"></i></li>';

				// Location of file: http://someplace/.
				echo '
								<ul style="margin-left: 5em">
									<li class="package_section"><i class="fa fa-cloud-download"></i> ', $txt['file_location'], ':&nbsp; <a href="', $package['server']['download'], '">', $package['server']['download'], '</a></li>';

				// Location of issues?
				if (!empty($package['server']['bugs']))
					echo '
									<li class="package_section"><i class="fa fa-bug"></i> ', $txt['bug_location'], ':&nbsp; <a href="', $package['server']['bugs'], '">', $package['server']['bugs'], '</a></li>';

				// Location of support?
				if (!empty($package['server']['support']))
					echo '
									<li class="package_section"><i class="fa fa-support"></i> ', $txt['support_location'], ':&nbsp; <a href="', $package['server']['support'], '">', $package['server']['support'], '</a></li>';

				// Description: bleh bleh!
				echo '
								</ul>
								<li class="package_section"><div class="infobox">', $txt['package_description'], ':&nbsp; ', $package['description'], '</div></li>
							</ul>';]]></add>
		</operation>
	</file>
	<file name="THEMEDIR/css/_besocial/index_besocial.css">
		<operation>
			<search position="replace"><![CDATA[	box-shadow: 0 -1px 0 #66aa55 inset;
	text-decoration: none;
}
/* /me uses this a lot. (emote, try typing /me in a post.) */
.meaction {
	color: #50aa3a;]]></search>
			<add><![CDATA[	box-shadow: 0 -1px 0 #66aa55 inset;
	text-decoration: none;
}
/* Styling for tables inside posts */
.inner > .bbc_table_container > .bbc_table td {
	border-bottom: 1px solid #ccc;
	border-right: 1px solid #ccc;
}
.inner > .bbc_table_container > .bbc_table th {
	border-bottom: 1px solid #bbb;
	border-right: 1px solid #ccc;
}
.inner > .bbc_table_container > .bbc_table td:last-child,
.inner > .bbc_table_container > .bbc_table th:last-child  {
	border-right: none;
}
/* /me uses this a lot. (emote, try typing /me in a post.) */
.meaction {
	color: #50aa3a;]]></add>
		</operation>
	</file>
	<file name="THEMEDIR/css/_light/index_light.css">
		<operation>
			<search position="replace"><![CDATA[	box-shadow: 0 -1px 0 #66aa55 inset;
	text-decoration: none;
}
/* /me uses this a lot. (emote, try typing /me in a post.) */
.meaction {
	color: #50aa3a;]]></search>
			<add><![CDATA[	box-shadow: 0 -1px 0 #66aa55 inset;
	text-decoration: none;
}
/* Styling for tables inside posts */
.inner > .bbc_table_container > .bbc_table td {
	border-bottom: 1px solid #ccc;
	border-right: 1px solid #ccc;
}
.inner > .bbc_table_container > .bbc_table th {
	border-bottom: 1px solid #bbb;
	border-right: 1px solid #ccc;
}
.inner > .bbc_table_container > .bbc_table td:last-child,
.inner > .bbc_table_container > .bbc_table th:last-child  {
	border-right: none;
}

/* /me uses this a lot. (emote, try typing /me in a post.) */
.meaction {
	color: #50aa3a;]]></add>
		</operation>
	</file>
	<file name="THEMEDIR/css/admin.css">
		<operation>
			<search position="replace"><![CDATA[}
.settings .help .icon {
	margin: 0 0 0 -20px;
    position: absolute;
}
.table_caption, tr.table_caption td {
	font-weight: bold;]]></search>
			<add><![CDATA[}
.settings .help .icon {
	margin: 0 0 0 -20px;
	position: absolute;
}
.table_caption, tr.table_caption td {
	font-weight: bold;]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[	padding: 0.2em;
	margin: 1px;
}
.description, .information {
	max-height: 16em;
	overflow: auto;]]></search>
			<add><![CDATA[	padding: 0.2em;
	margin: 1px;
}
.package_id {
	width: 35%;
	min-width: 20em;
	display: inline-block;
	font-weight: bold;
}
.description, .information {
	max-height: 16em;
	overflow: auto;]]></add>
		</operation>
	</file>
	<file name="THEMEDIR/css/index.css">
		<operation>
			<search position="replace"><![CDATA[}
select {
	padding: 0 0 0 2px;
}
.input_text {
	font-size: .876em;]]></search>
			<add><![CDATA[}
select {
	padding: 0 0 0 2px;
	max-width: 95%;
	white-space: nowrap;
	overflow: hidden;
	text-overflow: ellipsis;
}
.input_text {
	font-size: .876em;]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[	color: inherit;
	font: inherit;
	vertical-align: top;
	padding: 0 1em 0 0;
}
.bbc_table th {
	color: inherit;
	font: inherit;
	font-weight: bold;
	padding: 0 1em 0 0;
}
.bbc_u {
	text-decoration: underline;]]></search>
			<add><![CDATA[	color: inherit;
	font: inherit;
	vertical-align: top;
	padding: 0 0.5em;
}
.bbc_table th {
	color: inherit;
	font: inherit;
	font-weight: bold;
	padding: 0 0.5em;
}
/* Styling for bbc tables inside posts */
.inner > .bbc_table_container > .bbc_table {
	border-collapse: collapse;
}
.inner > .bbc_table_container > .bbc_table th {
	text-align: center;
}
.bbc_u {
	text-decoration: underline;]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[.like_button:before, .likes_button:before, .unlike_button:before {
	background-position: 0 -480px;
}
.unlike_button:hover:before {
	background-position: 0 -408px;
}
.like_button:hover:before {]]></search>
			<add><![CDATA[.like_button:before, .likes_button:before, .unlike_button:before {
	background-position: 0 -480px;
}
.unlike_button:before {
	background-position: 0 -408px;
}
.like_button:hover:before {]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[	float: left;
}
.board_name {
	padding: 0 0 1px 0;
	font-size: 1.143em;
}
.board_info .board_description, .board_info .moderators {]]></search>
			<add><![CDATA[	float: left;
}
.board_name {
	padding: 0 0 1px 56px;
	font-size: 1.143em;
}
.board_info .board_description, .board_info .moderators {]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[	position: absolute;
	display: none;
	padding: 0.5em;
}
#mlsearch_options.nojs {
	display: none;]]></search>
			<add><![CDATA[	position: absolute;
	display: none;
	padding: 0.5em;
	max-width: 12em;
}
#mlsearch_options.nojs {
	display: none;]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[}
#mlsearch_options .mlsearch_option {
	padding: 0.2em 0;
}

]]></search>
			<add><![CDATA[}
#mlsearch_options .mlsearch_option {
	padding: 0.2em 0;
	line-height: 2em;
}

]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[		min-width: 20em;
	}
	.board_name {
		margin: 12px 0 0 56px;
	}
	.board_lastposter {
		display: block;]]></search>
			<add><![CDATA[		min-width: 20em;
	}
	.board_name {
		margin: 12px 0 0;
	}
	.board_lastposter {
		display: block;]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[		word-wrap: break-word;
	}
	.board_name {
		margin: 0 0 0 35px;
	}
	.board_info:after {
		display: block;]]></search>
			<add><![CDATA[		word-wrap: break-word;
	}
	.board_name {
		margin: 0;
		padding: 0 0 1px 35px;
	}
	.board_info:after {
		display: block;]]></add>
		</operation>
	</file>
	<file name="THEMEDIR/css/rtl.css">
		<operation>
			<search position="replace"><![CDATA[.board_info .board_description, .board_info .moderators {
	margin: 0 56px 0 0;
}
.board_stats {
	text-align: left;
	padding: 1px 6px 1px 0;]]></search>
			<add><![CDATA[.board_info .board_description, .board_info .moderators {
	margin: 0 56px 0 0;
}
.board_name {
	padding: 0 56px 1px 0;
}
.board_stats {
	text-align: left;
	padding: 1px 6px 1px 0;]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[		margin-right: 0;
		margin-left: 5px;
	}
	.board_name {
		margin: 0 56px 0 0;
	}
	.board_description, .moderators, .childboards {
		margin: 0 8px 0 0;
	}]]></search>
			<add><![CDATA[		margin-right: 0;
		margin-left: 5px;
	}
	.board_description, .moderators, .childboards {
		margin: 0 8px 0 0;
	}]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[		margin: 0 5px;
	}
	.board_name {
		margin: 0 35px 0 0;
	}
	#basicinfo, #detailedinfo {
		float: none;]]></search>
			<add><![CDATA[		margin: 0 5px;
	}
	.board_name {
		margin: 0;
		padding: 0 35px 0 0;
	}
	#basicinfo, #detailedinfo {
		float: none;]]></add>
		</operation>
	</file>
	<file name="LANGUAGEDIR/english/Errors.english.php">
		<operation>
			<search position="replace"><![CDATA[$txt['session_timeout_file_upload'] = 'Your session timed out while uploading the file. Please try again.';
$txt['no_files_uploaded'] = 'There are no files to upload.';
$txt['session_verify_fail'] = 'Session verification failed. Please try logging out and back in again, and then try again.';
$txt['verify_url_fail'] = 'Unable to verify referring URL. Please go back and try again.';
$txt['token_verify_fail'] = 'Token verification failed. Please go back and try again.';
$txt['guest_vote_disabled'] = 'Guests cannot vote in this poll.';
]]></search>
			<add><![CDATA[$txt['session_timeout_file_upload'] = 'Your session timed out while uploading the file. Please try again.';
$txt['no_files_uploaded'] = 'There are no files to upload.';
$txt['session_verify_fail'] = 'Session verification failed. Please try logging out and back in again, and then try again.';
$txt['verify_url_fail'] = 'Unable to verify referring URL: %1$s. Please go back and try again.';
$txt['token_verify_fail'] = 'Token verification failed. Please go back and try again.';
$txt['guest_vote_disabled'] = 'Guests cannot vote in this poll.';
]]></add>
		</operation>
	</file>
	<file name="LANGUAGEDIR/english/Packages.english.php">
		<operation>
			<search position="replace"><![CDATA[$txt['mod_date'] = 'Last updated';
$txt['mod_section_count'] = 'Browse the (%1d) addons in this section';

$txt['package_installed_key'] = 'Installed addons:';
$txt['package_installed_current'] = 'current version';
$txt['package_installed_old'] = 'older version';]]></search>
			<add><![CDATA[$txt['mod_date'] = 'Last updated';
$txt['mod_section_count'] = 'Browse the (%1d) addons in this section';

// Package Server strings
$txt['package_current'] = '(%s <em>You have the Current version %s</em>)';
$txt['package_update'] = '(%s <em>An update for your %s version is available</em>)';
$txt['package_installed'] = 'installed';
$txt['package_downloaded'] = 'downloaded';

$txt['package_installed_key'] = 'Installed addons:';
$txt['package_installed_current'] = 'current version';
$txt['package_installed_old'] = 'older version';]]></add>
		</operation>
	</file>
	<file name="THEMEDIR/scripts/elk_jquery_embed.js">
		<operation>
			<search position="replace"><![CDATA[
		var domain_regex = /^[^:]*:\/\/(?:www\.)?([^\/]+)(\/.*)$/,
			embed_html = '<div class="elk_video"><iframe width="640px" height="385px" style="max-width: 98%; max-height: auto;" src="{src}" frameborder="0" allowfullscreen></iframe></div>',
			handlers = {
			'youtube.com': function(path, a, embed) {
				var videoID = path.match(/\bv[=/]([^&#?$]+)/i) || path.match(/#p\/(?:a\/)?[uf]\/\d+\/([^?$]+)/i);
				if (!videoID || !(videoID = videoID[1]))
					return;

				var embedURL = '//youtube.com/embed/' + videoID,
					tag = embedOrIMG(embed, a, '//img.youtube.com/vi/' + videoID + '/0.jpg', embedURL + '?amprel=0', embedURL + '?amprel=0&autoplay=1');

				return [oSettings.youtube, tag];
			},
			'youtu.be': function(path, a, embed) {
				var videoID = path.match(/([\w-]{11})/i);
				if (!videoID || !(videoID = videoID[1]))
					return;

				var embedURL = '//youtube.com/embed/' + videoID,
					tag = embedOrIMG(embed, a, '//img.youtube.com/vi/' + videoID + '/0.jpg', embedURL + '?amprel=0', embedURL + '?amprel=0&autoplay=1');

				return [oSettings.youtube, tag];
			},
			'vimeo.com': function(path, a, embed) {
				var videoID = path.match(/^\/(\d+)/i);
				if (!videoID || !(videoID = videoID[1]))
					return;

				var embedURL = '//player.vimeo.com/video/' + videoID,
					tag = null,
					img = '//assets.vimeo.com/images/logo_vimeo_land.png';

				// Get the preview image or embed tag
				if (!embed)
				{
					// We need to use a callback to get the thumbnail
					getVimeoIMG(videoID, function(img) {
						$(a).parent().next().find("img").attr("src", img);
					});

					// This is to show something while we wait for our callback to return
					tag = embedOrIMG(embed, a, img, embedURL, embedURL + '?autoplay=1');
				}
				else
					tag = embedOrIMG(embed, a, img, embedURL, embedURL + '?autoplay=1');

				return [oSettings.vimeo, tag];
			},
			'dailymotion.com': function(path, a, embed) {
				var videoID = path.match(/^\/(?:video|swf)\/([a-z0-9]{1,18})/i);
				if (!videoID || !(videoID = videoID[1]))
					return;

				var embedURL = '//dailymotion.com/embed/video/' + videoID,
					tag = null,
					img = '//dailymotion.com/thumbnail/video/' + videoID;

				// Get the preview image or embed tag
				if (!embed)
				{
					// We use a callback to get the thumbnail we want
					getDailymotionIMG(videoID, function(img) {
						$(a).parent().next().find("img").attr("src", img);
					});

					// This is to show something while we wait for our callback to return
					tag = embedOrIMG(embed, a, img, embedURL, embedURL + '?related=0&autoplay=1');
				}
				else
					tag = embedOrIMG(embed, a, img, embedURL + '?related=0', embedURL + '?related=0&autoplay=1');

				return [oSettings.dailymotion, tag];
			}
		};

		// Get the links in the id="msg_1234 divs.]]></search>
			<add><![CDATA[
		var domain_regex = /^[^:]*:\/\/(?:www\.)?([^\/]+)(\/.*)$/,
			embed_html = '<div class="elk_video"><iframe width="640px" height="385px" style="max-width: 98%; max-height: auto;" src="{src}" frameborder="0" allowfullscreen></iframe></div>',
			handlers = {};
		handlers['youtube.com'] = function(path, a, embed) {
			var videoID = path.match(/\bv[=/]([^&#?$]+)/i) || path.match(/#p\/(?:a\/)?[uf]\/\d+\/([^?$]+)/i) || path.match(/([\w-]{11})/i);
			if (!videoID || !(videoID = videoID[1]))
				return;

			// There are two types of YouTube timestamped links
			// http://youtu.be/lLOE3fBZcUU?t=1m37s when you click share underneath the video
			// http://youtu.be/lLOE3fBZcUU?t=97 when you right click on a video and choose "Copy video URL at current time"
			// For embedding, you need to use "?start=97" instead, so we have to convert t=1m37s to seconds while also supporting t=97
			var startAt = path.match(/t=(?:([1-9]{1,2})h)?(?:([1-9]{1,2})m)?(?:([1-9]+)s?)/);
			var startAtPar = '';
			if (startAt)
			{
				var startAtSeconds = 0;

				// Hours
				if (typeof(startAt[1]) !== 'undefined')
					startAtSeconds += parseInt(startAt[1]) * 3600;
				// Minutes
				if (typeof(startAt[2]) !== 'undefined')
					startAtSeconds += parseInt(startAt[2]) * 60;
				// Seconds
				if (typeof(startAt[3]) !== 'undefined')
					startAtSeconds += parseInt(startAt[3]);

				startAtPar = '&start=' + startAtSeconds.toString();
			}

			var embedURL = '//youtube.com/embed/' + videoID + '?rel=0' + startAtPar,
				tag = embedOrIMG(embed, a, '//img.youtube.com/vi/' + videoID + '/0.jpg', embedURL, embedURL + '&autoplay=1' );

			return [oSettings.youtube, tag];
		};
		handlers['youtu.be'] = handlers['youtube.com'];
		handlers['vimeo.com'] = function(path, a, embed) {
			var videoID = path.match(/^\/(\d+)/i);
			if (!videoID || !(videoID = videoID[1]))
				return;

			var embedURL = '//player.vimeo.com/video/' + videoID,
				tag = null,
				img = '//assets.vimeo.com/images/logo_vimeo_land.png';

			// Get the preview image or embed tag
			if (!embed)
			{
				// We need to use a callback to get the thumbnail
				getVimeoIMG(videoID, function(img) {
					$(a).parent().next().find("img").attr("src", img);
				});

				// This is to show something while we wait for our callback to return
				tag = embedOrIMG(embed, a, img, embedURL, embedURL + '?autoplay=1');
			}
			else
				tag = embedOrIMG(embed, a, img, embedURL, embedURL + '?autoplay=1');

			return [oSettings.vimeo, tag];
		};
		handlers['dailymotion.com'] = function(path, a, embed) {
			var videoID = path.match(/^\/(?:video|swf)\/([a-z0-9]{1,18})/i);
			if (!videoID || !(videoID = videoID[1]))
				return;

			var embedURL = '//dailymotion.com/embed/video/' + videoID,
				tag = null,
				img = '//dailymotion.com/thumbnail/video/' + videoID;

			// Get the preview image or embed tag
			if (!embed)
			{
				// We use a callback to get the thumbnail we want
				getDailymotionIMG(videoID, function(img) {
					$(a).parent().next().find("img").attr("src", img);
				});

				// This is to show something while we wait for our callback to return
				tag = embedOrIMG(embed, a, img, embedURL, embedURL + '?related=0&autoplay=1');
			}
			else
				tag = embedOrIMG(embed, a, img, embedURL + '?related=0', embedURL + '?related=0&autoplay=1');

			return [oSettings.dailymotion, tag];
		};

		// Get the links in the id="msg_1234 divs.]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[			var tag = links[i],
				text = tag.innerText || tag.textContent || "";

			// Ignore in quotes and signatures
			if ("bbc_standard_quote;signature".indexOf(tag.parentNode.className) !== -1)
				continue;]]></search>
			<add><![CDATA[			var tag = links[i],
				text = tag.innerText || tag.textContent || "";

			// Ignore in sentences
			if (tag.previousSibling && tag.previousSibling.nodeName === '#text')
				continue;

			// Ignore in quotes and signatures
			if ("bbc_standard_quote;signature".indexOf(tag.parentNode.className) !== -1)
				continue;]]></add>
		</operation>
	</file>
</modification>